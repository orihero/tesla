/// Flutter icons TeslaIcons
/// Copyright (C) 2021 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  TeslaIcons
///      fonts:
///       - asset: fonts/TeslaIcons.ttf
///
/// 
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * Linecons, Copyright (C) 2013 by Designmodo
///         Author:    Designmodo for Smashing Magazine
///         License:   CC BY ()
///         Homepage:  http://designmodo.com/linecons-free/
/// * Typicons, (c) Stephen Hutchings 2012
///         Author:    Stephen Hutchings
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://typicons.com/
/// * Linearicons Free, Copyright (C) Linearicons.com
///         Author:    Perxis
///         License:   CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
///         Homepage:  https://linearicons.com
///
import 'package:flutter/widgets.dart';

class TeslaIcons {
  TeslaIcons._();

  static const _kFontFam = 'TeslaIcons';
  static const String _kFontPkg = null;

  static const IconData auto = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData battery_std = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cool = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cog_1 = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData location = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData waves = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData power = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData temperature = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData timer = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData user = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData settings_cog = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData lock = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
